<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webank.shopos.schedule.center.dao.mapper.TaskCommandDao">
  <resultMap id="BaseResultMap" type="com.webank.shopos.schedule.center.dao.domain.TaskCommand">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="command" jdbcType="VARCHAR" property="command" />
    <result column="publish_host" jdbcType="VARCHAR" property="publishHost" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="schedule_host" jdbcType="VARCHAR" property="scheduleHost" />
    <result column="processor" jdbcType="VARCHAR" property="processor" />
    <result column="group_id" jdbcType="BIGINT" property="groupId" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="schedule_id" jdbcType="BIGINT" property="scheduleId" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="target_host" jdbcType="VARCHAR" property="targetHost" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="priority" jdbcType="TINYINT" property="priority" />
    <result column="parallel" jdbcType="TINYINT" property="parallel" />
    <result column="ref_command_id" jdbcType="BIGINT" property="refCommandId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.webank.shopos.schedule.center.dao.domain.TaskCommand">
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, command, publish_host, publish_time, schedule_host, processor, group_id, task_id, 
    schedule_id, `state`, target_host, is_deleted, create_time, update_time, priority, 
    parallel, ref_command_id
  </sql>
  <sql id="Blob_Column_List">
    context
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommandExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_command
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_command
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommandExample">
    delete from task_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommand" useGeneratedKeys="true">
    insert into task_command (command, publish_host, publish_time, 
      schedule_host, processor, group_id, 
      task_id, schedule_id, `state`, 
      target_host, is_deleted, create_time, 
      update_time, priority, parallel, 
      ref_command_id, context)
    values (#{command,jdbcType=VARCHAR}, #{publishHost,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{scheduleHost,jdbcType=VARCHAR}, #{processor,jdbcType=VARCHAR}, #{groupId,jdbcType=BIGINT}, 
      #{taskId,jdbcType=BIGINT}, #{scheduleId,jdbcType=BIGINT}, #{state,jdbcType=VARCHAR}, 
      #{targetHost,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{priority,jdbcType=TINYINT}, #{parallel,jdbcType=TINYINT}, 
      #{refCommandId,jdbcType=BIGINT}, #{context,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommand" useGeneratedKeys="true">
    insert into task_command
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="command != null">
        command,
      </if>
      <if test="publishHost != null">
        publish_host,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="scheduleHost != null">
        schedule_host,
      </if>
      <if test="processor != null">
        processor,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="scheduleId != null">
        schedule_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="targetHost != null">
        target_host,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="parallel != null">
        parallel,
      </if>
      <if test="refCommandId != null">
        ref_command_id,
      </if>
      <if test="context != null">
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="command != null">
        #{command,jdbcType=VARCHAR},
      </if>
      <if test="publishHost != null">
        #{publishHost,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleHost != null">
        #{scheduleHost,jdbcType=VARCHAR},
      </if>
      <if test="processor != null">
        #{processor,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="targetHost != null">
        #{targetHost,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=TINYINT},
      </if>
      <if test="parallel != null">
        #{parallel,jdbcType=TINYINT},
      </if>
      <if test="refCommandId != null">
        #{refCommandId,jdbcType=BIGINT},
      </if>
      <if test="context != null">
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommandExample" resultType="java.lang.Long">
    select count(*) from task_command
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_command
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.command != null">
        command = #{record.command,jdbcType=VARCHAR},
      </if>
      <if test="record.publishHost != null">
        publish_host = #{record.publishHost,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.scheduleHost != null">
        schedule_host = #{record.scheduleHost,jdbcType=VARCHAR},
      </if>
      <if test="record.processor != null">
        processor = #{record.processor,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=BIGINT},
      </if>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=BIGINT},
      </if>
      <if test="record.scheduleId != null">
        schedule_id = #{record.scheduleId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        `state` = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.targetHost != null">
        target_host = #{record.targetHost,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=TINYINT},
      </if>
      <if test="record.parallel != null">
        parallel = #{record.parallel,jdbcType=TINYINT},
      </if>
      <if test="record.refCommandId != null">
        ref_command_id = #{record.refCommandId,jdbcType=BIGINT},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update task_command
    set id = #{record.id,jdbcType=BIGINT},
      command = #{record.command,jdbcType=VARCHAR},
      publish_host = #{record.publishHost,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      schedule_host = #{record.scheduleHost,jdbcType=VARCHAR},
      processor = #{record.processor,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=BIGINT},
      task_id = #{record.taskId,jdbcType=BIGINT},
      schedule_id = #{record.scheduleId,jdbcType=BIGINT},
      `state` = #{record.state,jdbcType=VARCHAR},
      target_host = #{record.targetHost,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      priority = #{record.priority,jdbcType=TINYINT},
      parallel = #{record.parallel,jdbcType=TINYINT},
      ref_command_id = #{record.refCommandId,jdbcType=BIGINT},
      context = #{record.context,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_command
    set id = #{record.id,jdbcType=BIGINT},
      command = #{record.command,jdbcType=VARCHAR},
      publish_host = #{record.publishHost,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      schedule_host = #{record.scheduleHost,jdbcType=VARCHAR},
      processor = #{record.processor,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=BIGINT},
      task_id = #{record.taskId,jdbcType=BIGINT},
      schedule_id = #{record.scheduleId,jdbcType=BIGINT},
      `state` = #{record.state,jdbcType=VARCHAR},
      target_host = #{record.targetHost,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      priority = #{record.priority,jdbcType=TINYINT},
      parallel = #{record.parallel,jdbcType=TINYINT},
      ref_command_id = #{record.refCommandId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommand">
    update task_command
    <set>
      <if test="command != null">
        command = #{command,jdbcType=VARCHAR},
      </if>
      <if test="publishHost != null">
        publish_host = #{publishHost,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="scheduleHost != null">
        schedule_host = #{scheduleHost,jdbcType=VARCHAR},
      </if>
      <if test="processor != null">
        processor = #{processor,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="scheduleId != null">
        schedule_id = #{scheduleId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="targetHost != null">
        target_host = #{targetHost,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=TINYINT},
      </if>
      <if test="parallel != null">
        parallel = #{parallel,jdbcType=TINYINT},
      </if>
      <if test="refCommandId != null">
        ref_command_id = #{refCommandId,jdbcType=BIGINT},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommand">
    update task_command
    set command = #{command,jdbcType=VARCHAR},
      publish_host = #{publishHost,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      schedule_host = #{scheduleHost,jdbcType=VARCHAR},
      processor = #{processor,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=BIGINT},
      task_id = #{taskId,jdbcType=BIGINT},
      schedule_id = #{scheduleId,jdbcType=BIGINT},
      `state` = #{state,jdbcType=VARCHAR},
      target_host = #{targetHost,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      priority = #{priority,jdbcType=TINYINT},
      parallel = #{parallel,jdbcType=TINYINT},
      ref_command_id = #{refCommandId,jdbcType=BIGINT},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.webank.shopos.schedule.center.dao.domain.TaskCommand">
    update task_command
    set command = #{command,jdbcType=VARCHAR},
      publish_host = #{publishHost,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      schedule_host = #{scheduleHost,jdbcType=VARCHAR},
      processor = #{processor,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=BIGINT},
      task_id = #{taskId,jdbcType=BIGINT},
      schedule_id = #{scheduleId,jdbcType=BIGINT},
      `state` = #{state,jdbcType=VARCHAR},
      target_host = #{targetHost,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      priority = #{priority,jdbcType=TINYINT},
      parallel = #{parallel,jdbcType=TINYINT},
      ref_command_id = #{refCommandId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>